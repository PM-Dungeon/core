package demo;

import level.generator.dungeong.roomg.RoomTemplate;
import level.generator.dungeong.roomg.RoomTemplateLoader;
import level.tools.DesignLabel;
import level.tools.LevelElement;
import tools.Point;

import java.util.ArrayList;

public class LayoutCreator {
    public static void main(String[] args) {

        ArrayList<RoomTemplate> templates = new ArrayList<>();

        LevelElement[][] kreislayout = {
            {
                LevelElement.SKIP,
                LevelElement.SKIP,
                LevelElement.SKIP,
                LevelElement.SKIP,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.SKIP,
                LevelElement.SKIP,
                LevelElement.SKIP,
                LevelElement.SKIP
            },
            {
                LevelElement.SKIP,
                LevelElement.SKIP,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.SKIP,
                LevelElement.SKIP,
                LevelElement.SKIP
            },
            {
                LevelElement.SKIP,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.SKIP
            },
            {
                LevelElement.SKIP,
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL,
                LevelElement.SKIP
            },
            {
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL,
                LevelElement.WALL
            },
            {
                LevelElement.SKIP,
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL,
                LevelElement.SKIP
            },
            {
                LevelElement.SKIP,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.SKIP
            },
            {
                LevelElement.SKIP,
                LevelElement.SKIP,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.SKIP,
                LevelElement.SKIP
            },
            {
                LevelElement.SKIP,
                LevelElement.SKIP,
                LevelElement.SKIP,
                LevelElement.SKIP,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.SKIP,
                LevelElement.SKIP,
                LevelElement.SKIP,
                LevelElement.SKIP
            }
        };
        Point localRef = new Point(7, 7);
        RoomTemplate kreis = new RoomTemplate(kreislayout, DesignLabel.ALL, localRef);

        LevelElement[][] squareLayout = {
            {
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.FLOOR,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.FLOOR,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.FLOOR,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.FLOOR,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL
            }
        };
        Point squareRef = new Point(4, 4);
        RoomTemplate square = new RoomTemplate(squareLayout, DesignLabel.ALL, squareRef);
        templates.add(square);
        templates.add(kreis);

        LevelElement[][] bigFloor = {
            {
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.WILD,
                LevelElement.FLOOR,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL
            }
        };
        Point bigFloorRef = new Point(5, 3);
        RoomTemplate bigFloorRoome = new RoomTemplate(bigFloor, DesignLabel.ALL, bigFloorRef);
        templates.add(bigFloorRoome);

        LevelElement[][] floorL = {
            {
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.FLOOR,
                LevelElement.WALL
            },
            {
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL,
                LevelElement.WALL
            }
        };
        Point floorP = new Point(7, 1);
        RoomTemplate floor = new RoomTemplate(floorL, DesignLabel.ALL, floorP);
        templates.add(floor);

        RoomTemplateLoader loader = new RoomTemplateLoader("roomTemplates.json");
        loader.writeToJSON(templates, "roomTemplates.json");
    }
}
