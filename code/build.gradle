plugins {
    id "java"
    id "com.github.spotbugs" version "4.7.9" apply true
    id "eclipse"
    id "java-library"
    id "maven-publish"
}

version = "1.0"
ext {
    appName = "pmdungeon"
    gdxVersion = "1.10.0"
    roboVMVersion = "2.3.12"
    box2DLightsVersion = "1.5"
    ashleyVersion = "1.7.3"
    aiVersion = "1.8.2"
    gdxControllersVersion = "2.1.0"
}

sourceCompatibility = 17
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"
sourceSets.main.java.srcDirs = ["core/src/"]
sourceSets.test.java.srcDirs = ["core/test/"]
eclipse.project.name = appName + "-core"

repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    google()
}

dependencies {
    // LibGDX
    implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"

    // JUnit 4, Mockito and Powermock for testing:
    // https://mvnrepository.com/artifact/junit/junit
    testImplementation "junit:junit:4.13.2"

    // https://mvnrepository.com/artifact/org.powermock/powermock-module-junit4
    testImplementation "org.powermock:powermock-module-junit4:2.0.9"
    // https://mvnrepository.com/artifact/org.powermock/powermock-api-mockito2
    testImplementation "org.powermock:powermock-api-mockito2:2.0.9"
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

spotbugs {
    toolVersion = "4.2.2"
    ignoreFailures = true
    showStackTraces = false
}

spotbugsMain {
    reports {
        xml {
            enabled = true
            destination = file("$buildDir/reports/spotbugsXml.xml")
        }
    }
}

jar {
//    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
//    exclude "META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.DSA"
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = "io.github.pm-dungeon"
            artifactId = "core"
            version = "1.0.3"

            from components.java
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}
